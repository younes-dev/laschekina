<?php

namespace BackBundle\Repository;

/**
 * MediasRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MediasRepository extends \Doctrine\ORM\EntityRepository
{



   /********* liste des medias trie par date OrderBy DESC avec nember fixe ***********/

    public function getMediasListBack ( $typemedia , $languge )
    {
         $sql = $this->createQueryBuilder ( 'm' )
            ->select ( 'm' )
            ->innerJoin ( 'm.typemedia' , 't' )
            ->where ( "t.title = :typemedia" )
            ->andWhere ( "m.languge = :languge" )

            ->setParameter ( 'typemedia' , $typemedia )
            ->setParameter ( 'languge' , $languge )
            ->orderBy ( 'm.id' , 'DESC' )
        ;
        return $sql->getQuery ()->getResult ();


    }


/********* liste des medias trie par date OrderBy DESC avec nember fixe ***********/

    public function getMediasListdate ( $typemedia , $languge )
    {
        $date = date ( "Y-m-d" );
        $sql = $this->createQueryBuilder ( 'm' )
            ->select ( 'm' )
            ->innerJoin ( 'm.typemedia' , 't' )
            ->where ( "t.title = :typemedia" )
            ->andWhere ( "m.languge = :languge" )
            ->andWhere("m.startdate <= :startdate  or  m.startdate IS  NULL")
            ->andWhere("m.enddate >= :startdate  or  m.enddate IS  NULL")


         //   ->andWhere ( "m.startdate >= :startdate" )
            ->setParameter ( 'typemedia' , $typemedia )
            ->setParameter ( 'languge' , $languge )
            ->setParameter ( 'startdate' , $date )
            ->orderBy ( 'm.id' , 'DESC' )
        ;
        return $sql->getQuery ()->getResult ();


    }



/********* liste des medias trie par date OrderBy DESC avec nember fixe ***********/

    public function getMediasListdateNbrFix ( $typemedia , $languge , $count )
    {
        $date = date ( "Y-m-d" );
         $date1 = str_replace('-', '/', $date);
        $maDate = date('Y-m-d',strtotime($date1 . "+15 days"));


        $sql = $this->createQueryBuilder ( 'm' )
            ->select ( 'm' )
            ->innerJoin ( 'm.typemedia' , 't' )
            ->innerJoin('m.listedates', 'd')
            ->where ( "t.title = :typemedia" )
            ->andWhere ( "m.languge = :languge" )
             ->andWhere("   d.startDate <= :startdate   and  d.endDate >= :startdate   ")
        //     ->andWhere("  (d.startDate <= :startdate   and  d.endDate >= :startdate ) or (   d.startDate >= :startdate  and   :DatePlus >= d.startDate   ) ")
       //  ->andWhere("  m.startdate <= :startdate      ")

            //   ->andWhere ( "m.startdate >= :startdate" )
            ->setParameter ( 'typemedia' , $typemedia )
       //     ->setParameter ( 'DatePlus' , $maDate )
            ->setParameter ( 'languge' , $languge )
            ->setParameter ( 'startdate' , $date )
            ->setMaxResults ( $count )
            ->orderBy ( 'm.nbrShow' , 'DESC' )
        ;
        return $sql->getQuery ()->getResult ();


    }


    public function getMediasListdateNbrFixProgramme ( $typemedia , $languge , $count )
    {
        $date = date ( "Y-m-d" );
        $date1 = str_replace('-', '/', $date);
        $maDate = date('Y-m-d',strtotime($date1 . "+15 days"));



        $sql = $this->createQueryBuilder ( 'm' )
            ->select ( 'm' )
            ->innerJoin ( 'm.typemedia' , 't' )
            ->innerJoin('m.listedates', 'd')
            ->where ( "t.title = :typemedia" )
            ->andWhere ( "m.languge = :languge" )
            ->andWhere("   d.startDate <= :startdate   and  d.endDate >= :startdate   ")
       //     ->andWhere("  (d.startDate <= :startdate   and  d.endDate >= :startdate ) or (   d.startDate >= :startdate  and   :DatePlus >= d.startDate   ) ")


            //   ->andWhere ( "m.startdate >= :startdate" )
        //    ->setParameter ( 'DatePlus' , $maDate )
            ->setParameter ( 'typemedia' , $typemedia )
            ->setParameter ( 'languge' , $languge )
            ->setParameter ( 'startdate' , $date )
            ->setMaxResults ( $count )
            ->orderBy ( 'm.nbrShow' , 'DESC' )
        ;
        return $sql->getQuery ()->getResult ();


    }


/********* liste des medias trie par date OrderBy DESC avec nember fixe ***********/

    public function getMediasrand ( $count , $languge )
    {
        $date = date ( "Y-m-d" );
        $sql = $this->createQueryBuilder ( 'm' )
            ->select ( 'm' )
            ->addSelect ( 'RAND() as HIDDEN rand ' )
            ->where ( "m.languge = :languge" )
            ->andWhere("m.startdate <= :startdate  or  m.startdate IS  NULL")
            ->andWhere("m.enddate >= :startdate  or  m.enddate IS  NULL")

            //  ->andWhere ( "m.startdate >= :startdate" )
             ->setParameter ( 'languge' , $languge )
        //    ->setParameter ( 'startdate' , $date )
        ->setParameter('startdate', $date)
            ->setMaxResults ( $count )
            ->orderBy ( 'rand' )
        ;
        return $sql->getQuery ()->getResult ();


    }

   
    /********* liste des medias trie par date OrderBy DESC lien au liste VIP ***********/

    public function getMediasList ( $typemedia , $ListIdVip )
    {

        $date = date ( "Y-m-d" );
        $sql = $this->createQueryBuilder ( 'm' )
            ->select ( 'm' )
            ->innerJoin ( 'm.typemedia' , 't' )
            ->innerJoin('m.users', 'u')
            ->where ( "t.title = :typemedia" )
            ->andWhere ( "u.id IN (:ListIdVip)" )
            ->andWhere("m.startdate <= :startdate  or  m.startdate IS  NULL")
            ->andWhere("m.enddate >= :startdate  or  m.enddate IS  NULL")

            ->setParameter('startdate', $date)
            ->setParameter ( 'typemedia' , $typemedia )
            ->setParameter('ListIdVip', $ListIdVip)
            ->orderBy ( 'm.nbrShow' , 'DESC' );
        return $sql->getQuery ()->getResult ();

    }
   /********* liste des medias trie par date OrderBy DESC lien au VIP ***********/

    public function getMediasVip (  $IdVip )
    {
        $date = date ( "Y-m-d" );

        $sql = $this->createQueryBuilder ( 'm' )
            ->select ( 'm' )
            ->innerJoin ( 'm.typemedia' , 't' )
            ->innerJoin('m.users', 'u')
            ->where ( "m.startdate >= :startdate" )
            ->andWhere( "u.id = :IdVip")
            ->andWhere("m.startdate <= :startdate  or  m.startdate IS  NULL")
            ->andWhere("m.enddate >= :startdate  or  m.enddate IS  NULL")

            ->setParameter('IdVip', $IdVip)
            ->setParameter('startdate', $date)
            ->orderBy ( 'm.nbrShow' , 'DESC' );
        return $sql->getQuery ()->getResult ();

    }
  /********* liste des medias de aujoudd'huit  ***********/

  public function getMediasCourant (  )
  {
      $date = date ( "Y-m-d" );

      $sql = $this->createQueryBuilder ( 'm' )
          ->select ( 'm' )
          ->innerJoin ( 'm.typemedia' , 't' )
          ->innerJoin('m.users', 'u')
          ->where ( "m.startdate = :startdate" )
          ->andWhere("m.startdate <= :startdate  or  m.startdate IS  NULL")
          ->andWhere("m.enddate >= :startdate  or  m.enddate IS  NULL")

          ->setParameter('startdate', $date)
          ->orderBy ( 'm.nbrShow' , 'ASC' );
      return $sql->getQuery ()->getResult ();

  }

  public function getMediasFutur ( )
  {
      $date = date ( "Y-m-d" );

      $sql = $this->createQueryBuilder ( 'm' )
          ->select ( 'm' )
          ->innerJoin ( 'm.typemedia' , 't' )
          ->innerJoin('m.users', 'u')

             ->where(" m.startdate > :startdate  ")


            ->setParameter('startdate', $date)


          ->orderBy ( 'm.startdate' , 'ASC' )
          ->setMaxResults ( 6 );
      return $sql->getQuery ()->getResult ();

  }
 /********* liste des medias trie par date OrderBy DESC ***********/

 public function getMediasListNumbrefixe ($count , $typemedia , $languge   )
 {
     $date  = date('Y-m-d');
     $sql = $this->createQueryBuilder ( 'm' )
         ->select(  'm')
         ->innerJoin ( 'm.typemedia' , 't' )
         ->where ( "t.title = :typemedia" )
         ->andWhere ( "m.languge = :languge" )
         ->andWhere("m.startdate <= :startdate  or  m.startdate IS  NULL")
         ->andWhere("m.enddate >= :startdate  or  m.enddate IS  NULL")
         ->andWhere('m.vod  IS  NULL')
         ->setParameter ( 'typemedia' , $typemedia )
         ->setParameter ( 'languge' , $languge )
         ->setParameter ( 'startdate' , $date )
         ->setMaxResults ( $count )
         ->orderBy ( 'm.id' , 'DESC' )

     ;
     return $sql->getQuery ()->getResult  ();
 }


 /********* liste des medias trie par date OrderBy DESC ***********/

 public function getTopPeople ($count , $typemedia , $languge   )
 {
      $sql = $this->createQueryBuilder ( 'm' )
         ->select(  'm')
         ->innerJoin ( 'm.typemedia' , 't' )
         ->where ( "t.title = :typemedia" )
         ->andWhere ( "m.languge = :languge" )

         ->setParameter ( 'typemedia' , $typemedia )
         ->setParameter ( 'languge' , $languge )
         ->setMaxResults ( $count )
         ->orderBy ( 'm.nbrShow' , 'DESC' )

     ;
     return $sql->getQuery ()->getResult  ();
 }


 public function getMediasListAll ( $typemedia , $languge   )
 {
     $date  = date('Y-m-d');
     $sql = $this->createQueryBuilder ( 'm' )
         ->select(  'm')
         ->innerJoin ( 'm.typemedia' , 't' )
         ->where ( "t.title = :typemedia" )
         ->andWhere ( "m.languge = :languge" )
         ->andWhere("m.startdate <= :startdate  or  m.startdate IS  NULL")
         ->andWhere("m.enddate >= :startdate  or  m.enddate IS  NULL")

         ->setParameter ( 'startdate' , $date )
         ->setParameter ( 'typemedia' , $typemedia )
         ->setParameter ( 'languge' , $languge )
         ->orderBy ( 'm.nbrShow' , 'DESC' )

     ;
     return $sql->getQuery ()->getResult  ();
 }



 public function getscrollInfini ( $count , $typemedia , $languge   )
 {
     $date  = date('Y-m-d');
     $sql = $this->createQueryBuilder ( 'm' )
         ->select(  'm')
         ->innerJoin ( 'm.typemedia' , 't' )
         ->where ( "t.title = :typemedia" )
         ->andWhere ( "m.languge = :languge" )
         ->andWhere("m.startdate <= :startdate  or  m.startdate IS  NULL")
         ->andWhere("m.enddate >= :startdate  or  m.enddate IS  NULL")

         ->setParameter ( 'startdate' , $date )
         ->setParameter ( 'typemedia' , $typemedia )
         ->setParameter ( 'languge' , $languge )
         ->orderBy ( 'm.id' , 'DESC' )
         ->setMaxResults ( $count )
     ;
     return $sql->getQuery ()->getResult  ();
 }


 public function getscrollInfiniAjax ( $lastId , $count , $typemedia , $languge   )
 {
     $date  = date('Y-m-d');
     $sql = $this->createQueryBuilder ( 'm' )
         ->select(  'm')
         ->innerJoin ( 'm.typemedia' , 't' )
         ->where ( "t.title = :typemedia" )
         ->andWhere ( "m.languge = :languge" )
         ->andWhere ( "m.id < :lastId" )
         ->andWhere("m.startdate <= :startdate  or  m.startdate IS  NULL")
         ->andWhere("m.enddate >= :startdate  or  m.enddate IS  NULL")

         ->setParameter ( 'lastId' , $lastId )
         ->setParameter ( 'startdate' , $date )
         ->setParameter ( 'typemedia' , $typemedia )
         ->setParameter ( 'languge' , $languge )
         ->orderBy ( 'm.id' , 'DESC' )
         ->setMaxResults ( $count )
     ;
     return $sql->getQuery ()->getResult  ();
 }




 public function getscrollInfiniAjaxProgramme ( $lastId , $count , $typemedia , $languge   )
 {
     $date  = date('Y-m-d');
     $sql = $this->createQueryBuilder ( 'm' )
         ->select(  'm')
         ->innerJoin ( 'm.typemedia' , 't' )
         ->where ( "t.title = :typemedia" )
         ->andWhere ( "m.languge = :languge" )
         ->andWhere ( "m.id < :lastId" )
         ->andWhere("m.startdate <= :startdate  ")
         ->andWhere("m.enddate >= :startdate  ")
         ->andWhere('m.vod  IS  NULL')
         ->setParameter ( 'lastId' , $lastId )
         ->setParameter ( 'startdate' , $date )
         ->setParameter ( 'typemedia' , $typemedia )
         ->setParameter ( 'languge' , $languge )
         ->orderBy ( 'm.id' , 'DESC' )
         ->setMaxResults ( $count )
     ;
     return $sql->getQuery ()->getResult  ();
 }



 public function getMediasProgrammeVod ( $typemedia     )
 {
     $date  = date('Y-m-d');
     $sql = $this->createQueryBuilder ( 'm' )
         ->select(  'm')
         ->innerJoin ( 'm.typemedia' , 't' )
         ->where ( "t.title = :typemedia" )
         ->andWhere("m.startdate <= :startdate  or  m.startdate IS  NULL")
         ->andWhere("m.enddate >= :startdate  or  m.enddate IS  NULL")

         ->andWhere('m.vod  IS NOT NULL')
         ->setParameter ( 'startdate' , $date )
         ->setParameter ( 'typemedia' , $typemedia )
         ->orderBy ( 'm.nbrShow' , 'DESC' )

     ;
     return $sql->getQuery ()->getResult  ();
 }


 /********* liste des medias Bientôt dans les salles    ***********/

 public function getMediasBientotsalles ( $typemedia ,$languge )
 {
      $dateFin = date('Y-m-d', strtotime(' + 31 DAY'));
    $dateDeb = date('Y-m-d');
     $sql = $this->createQueryBuilder ( 'm' )
         ->select ( 'm' )
        ->innerJoin ( 'm.typemedia' , 't' )
         ->where ( " m.startdate > :dateDeb " )
         ->andWhere ( " m.startdate < :dateFin " )
         ->andWhere("m.startdate <= :startdate  or  m.startdate IS  NULL")
         ->andWhere("m.enddate >= :startdate  or  m.enddate IS  NULL")

         ->andWhere ( "t.title = :typemedia" )
        ->andWhere ( "m.languge = :languge" )
         ->setParameter('dateDeb', $dateDeb)
         ->setParameter('dateFin', $dateFin)
         ->setParameter ( 'startdate' , $dateDeb )
         ->setParameter ( 'typemedia' , $typemedia )
         ->setParameter ( 'languge' , $languge )
         ->orderBy ( 'm.nbrShow' , 'ASC' );
     return $sql->getQuery ()->getResult ();

 }
/********* liste des medias Actuellement dans les salles  ***********/


    public function getMediasBientotsallesNew($count , $typemedia ,$languge )
    {

        $date = date ( "Y-m-d" );

        $sql = $this->createQueryBuilder ( 'm' )
            ->select ( 'm.id' )
            ->innerJoin ( 'm.typemedia' , 't' )

            ->where ( " m.startdate <= :date " )
            ->andWhere ( " m.enddate >= :date " )
            ->andWhere ( "t.title = :typemedia" )
            ->andWhere("m.startdate <= :startdate  or  m.startdate IS  NULL")
            ->andWhere("m.enddate >= :startdate  or  m.enddate IS  NULL")

            ->andWhere ( "m.languge = :languge" )
            ->setParameter('date', $date)
            ->setParameter ( 'typemedia' , $typemedia )
            ->setParameter ( 'startdate' , $date )
            ->setParameter ( 'languge' , $languge )
            ->setMaxResults ( $count )

            ->orderBy ( 'm.id' , 'ASC' );
        return $sql->getQuery ()->getArrayResult();


    }


public function getMediasActuellementsalles (  $typemedia ,$languge )
{
    $date = date ( "Y-m-d" );

    $sql = $this->createQueryBuilder ( 'm' )
        ->select ( 'm' )
        ->innerJoin ( 'm.typemedia' , 't' )
     
        ->where ( " m.startdate <= :date " )
        ->andWhere ( " m.enddate >= :date " )
        ->andWhere ( "t.title = :typemedia" )
        ->andWhere("m.startdate <= :startdate  or  m.startdate IS  NULL")
        ->andWhere("m.enddate >= :startdate  or  m.enddate IS  NULL")

        ->andWhere ( "m.languge = :languge" )
       ->setParameter('date', $date)
       ->setParameter ( 'typemedia' , $typemedia )
        ->setParameter ( 'startdate' , $date )
        ->setParameter ( 'languge' , $languge )


        ->orderBy ( 'm.id' , 'ASC' );
    return $sql->getQuery ()->getResult ();

}

/********* liste des medias pas encour commencer ***********/

    public function getNextMedias ( $typemedia , $languge )
    {
        $date = date ( "Y-m-d" );
        $sql = $this->createQueryBuilder ( 'm' )
            ->select ( 'm' )
            ->innerJoin ( 'm.typemedia' , 't' )
            ->where ( "t.title = :typemedia" )
            ->andWhere ( "m.languge = :languge" )
            ->andWhere ( "m.startdate >= :date" )
            ->andWhere("m.startdate <= :startdate  or  m.startdate IS  NULL")
            ->andWhere("m.enddate >= :startdate  or  m.enddate IS  NULL")

            ->setParameter ( 'typemedia' , $typemedia )
            ->setParameter ( 'languge' , $languge )
            ->setParameter ( 'startdate' , $date )
            ->setParameter ( 'date' , $date )
            ->orderBy ( 'm.nbrShow' , 'DESC' );
        return $sql->getQuery ()->getResult ();
    }


    public function getNextMediasEvent ( $idMedia , $typemedia , $languge , $count  )
    {
        $date = date ( "Y-m-d" );
        $sql = $this->createQueryBuilder ( 'm' )
            ->select ( 'm' )
            ->innerJoin ( 'm.typemedia' , 't' )
            ->where ( "t.title = :typemedia" )
            ->andWhere ( "m.languge = :languge" )
            ->andWhere ( "m.id != :idMedia" )
        //    ->andWhere ( "m.startdate >= :date" )
            ->andWhere("m.startdate <= :startdate  or  m.startdate IS  NULL")
            ->andWhere("m.enddate >= :startdate  or  m.enddate IS  NULL")

            ->setParameter ( 'typemedia' , $typemedia )
            ->setParameter ( 'languge' , $languge )
            ->setParameter ( 'startdate' , $date )
            ->setParameter ( 'idMedia' , $idMedia )
            ->setMaxResults ( $count )

            ->orderBy ( 'm.nbrShow' , 'DESC' );
        return $sql->getQuery ()->getResult ();
    }


    public function getMediasByTypeContent (  $idMedia ,$typemedia , $languge , $count  )
    {
          $sql = $this->createQueryBuilder ( 'm' )
            ->select ( 'm' )
            ->innerJoin ( 'm.typeContentMedia' , 't' )
            ->where ( "t.id = :typemedia" )
            ->andWhere ( "m.languge = :languge" )
              ->andWhere ( "m.id != :idMedia" )

              ->setParameter ( 'typemedia' , $typemedia )
            ->setParameter ( 'languge' , $languge )
              ->setParameter ( 'idMedia' , $idMedia )
              ->setMaxResults ( $count )
            ->orderBy ( 'm.nbrShow' , 'DESC' );
        return $sql->getQuery ()->getResult ();
    }

    /********* liste des medias qui terminer***********/

    public function getOldMedias ( $typemedia , $languge )
    {
        $date = date ( "Y-m-d" );
        $sql = $this->createQueryBuilder ( 'm' )
            ->select ( 'm' )
            ->innerJoin ( 'm.typemedia' , 't' )
            ->where ( "t.title = :typemedia" )
            ->andWhere ( "m.languge = :languge" )
            ->andWhere ( "m.startdate < :date" )
            ->setParameter ( 'typemedia' , $typemedia )
            ->setParameter ( 'languge' , $languge )
            ->setParameter ( 'date' , $date )
            ->orderBy ( 'm.nbrShow' , 'DESC' );
        return $sql->getQuery ()->getResult ();
    }


    /********* liste des videos avec le nombre fixe ***********/

    public function getMediasListvideo ( $count , $typemedia , $languge )
    {$date = date ( "Y-m-d" );


        return $this->createQueryBuilder ( 'm' )
            ->addSelect ( 'm' )
            ->innerJoin ( 'm.typemedia' , 't' )
            ->where ( "t.title = :typemedia" )
            ->andWhere ( "m.languge = :languge" )
            ->andWhere("m.startdate <= :startdate  or  m.startdate IS  NULL")
            ->andWhere("m.enddate >= :startdate  or  m.enddate IS  NULL")

            ->andWhere ( "m.sourcevideo IS NOT NULL" )
            ->setParameter ( 'typemedia' , $typemedia )
            ->setParameter ( 'startdate' , $date )
            ->setParameter ( 'languge' , $languge )
            ->orderBy ( 'm.nbrShow' , 'DESC' )
            ->setMaxResults ( $count )
            ->getQuery ()
            ->getResult ();

    }

    /********* requete get Media Box     ***********/
    public function getMediaBox($idMembre, $enable )
    {
        $sql = $this->createQueryBuilder('md')
            ->select('md')
            ->innerJoin('md.box', 'b')
            ->innerJoin ( 'md.typemedia' , 't' )
            ->where("b.membre = :idMembre")
            ->andWhere("b.enable = :enable ")
            ->groupBy('t.title')
            ->setParameter('idMembre', $idMembre)
            ->setParameter('enable', $enable);
        //  $sql->getQuery()->getSQL();
        return $sql->getQuery()->getArrayResult();
    }


       /********* requete Search   ***********/

    public function getSearchWord($searchWord, $typemedia , $languge  )
    {$date = date ( "Y-m-d" );

        return $this->createQueryBuilder ( 'm' )
            ->addSelect ( 'm' )
            ->innerJoin ( 'm.typemedia' , 't' )
            ->where ( "m.title LIKE :searchWord" )
            ->orWhere ( "m.titleHome LIKE :searchWord" )
            ->orWhere ( "m.shortdescription LIKE :searchWord" )
            ->orWhere ( "m.detaileddescription LIKE :searchWord" )
            ->orWhere ( "m.channel LIKE :searchWord" )
            ->andWhere ( "t.title = :typemedia" )
            ->andWhere ( "m.languge = :languge" )
            ->andWhere("m.startdate <= :startdate  or  m.startdate IS  NULL")
            ->andWhere("m.enddate >= :startdate  or  m.enddate IS  NULL")

            ->setParameter ( 'typemedia' , $typemedia )
            ->setParameter('searchWord', '%'.$searchWord.'%')
            ->setParameter('languge', $languge)
            ->setParameter ( 'startdate' , $date )
            ->orderBy ( 'm.nbrShow' , 'DESC' )
            ->getQuery ()
            ->getResult ();
    }

    /********* requete get Media Magazine    ***********/
    public function getMediasMagazine ($count , $typemedia , $languge )
    {
        $date = date ( "Y-m-d" );
        $sql = $this->createQueryBuilder ( 'm' )
            ->select ( 'm' )
            ->innerJoin ( 'm.typemedia' , 't' )
            ->where ( "t.title = :typemedia" )
            ->andWhere ( "m.languge = :languge" )
            ->andWhere ( "m.startdate >= :date" )
            ->andWhere("m.startdate <= :startdate  or  m.startdate IS  NULL")
            ->andWhere("m.enddate >= :startdate  or  m.enddate IS  NULL")

            ->setParameter ( 'typemedia' , $typemedia )
            ->setParameter ( 'languge' , $languge )
            ->setParameter ( 'date' , $date )
            ->setParameter ( 'startdate' , $date )
            ->setMaxResults ( $count )
            ->orderBy ( 'm.nbrShow' , 'DESC' );
        return $sql->getQuery ()->getResult ();
    }

    /************* get id de acteur *****************/

    /********* requete get Id acteur    ***********/
    public function getIdacteur( $idMedia )
    {
        $sql = $this->createQueryBuilder('md')
            ->select('u.id')
            ->innerJoin('md.users', 'u')
            ->where("md.id = :idMedia")
            ->setParameter('idMedia', $idMedia);
        return $sql->getQuery()->getArrayResult();
    }
  /********* requete get Media acteurs     ***********/
  public function getListeacteur( $idUser )
  {
      $sql = $this->createQueryBuilder('md')
          ->select('md')
          ->innerJoin('md.users', 'u')
          ->where("u.id = :idUser")
          ->setParameter('idUser', $idUser);
      return $sql->getQuery()->getResult();
  }
    /********* requete get Tweeter  acteur   ***********/
    public function getTweeteracteur( $idMedia )
    {
        $sql = $this->createQueryBuilder('md')
            ->select('u.twitter')
            ->innerJoin('md.users', 'u')
            ->where("md.id = :idMedia")
            ->andWhere("u.twitter  IS NOT NULL")
            ->setParameter('idMedia', $idMedia);
        return $sql->getQuery()->getArrayResult();
    }

}
